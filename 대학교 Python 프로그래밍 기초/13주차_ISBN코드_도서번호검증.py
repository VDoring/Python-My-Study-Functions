# ISBN코드는 각 출판사가 펴낸 도서들에 국제적으로 표준화하여 붙이는 고유의 도서 번호이다.
# ISBN코드는 10~13자리로 구성되며, 979-11-957304-3-8 에서
# 979=접두부, 11=국별번호, 957304=발행자 번호, 3=서명식별버호, 8=체크기호 로 구성된다.
# 여기서 체크기호는 앞의 12자리가 정확한지 오류를 검증하는 기호이다.

# ISBN 코드의 체크기호를 계산하는 방법:
# ISBN 코드 12자리 숫자에 가중치 1과 3을 번갈아 곱하여 값을 더함
# 가중치의 합을 10으로 나누어 나머지를 구함
# 10에서 나머지를 뺀 값이 체크기호가 되며, 나머지가 0인 경우 체크기호는 0이 됨


# ISBN 코드의 가중치를 계산하고 체크 기호 값을 계산하는 함수
def isbn_check(isbn):
    s = 0 # 가중치 값 계산의 중간값을 저장하기 위한 변수 s의 값을 0으로 설정

    for i in range(len(isbn)-1): # ISBN 코드의 0부터 11자리까지 반복
        if (i+1) % 2 == 1: # (i+1) % 2한것이 홀수라면
            s = s + int(isbn[i]) * 1 # 홀수 자리의 가중치 1을 곱함
        else:
            s = s + int(isbn[i]) * 3 # 짝수 자리의 가중치 3을 곱함
    print('ISBN 1~12자리의 가중치 반영 합계 : %d' %s) # ISBN 1~12자리의 가중치 반영 합계 출력.

    t = s % 10 # 가중치 합을 10으로 나누어 나머지 값 구함
    chk = (10 - t) % 10 # 10에서 나머지 값을 뺀 후, 10으로 나누어 나머지 값 구하여 체크 기호값 계산
    print('ISBN 1~12자리의 체크 기호 값 : %d' %chk) # ISBN 1~12자리의 체크 기호 값 출력.

    if chk == int(isbn[12]): # 만약 체크 기호 값이 isbn[12]와 같으면 
        rst = 1 # rst 값 1로 설정
    else:
        rst = 0 # # rst 값 3로 설정
    return rst

isbn = input('ISBN 13자리(- 제외) : ') # ISBN 코드 입력

if len(isbn) == 13: # 만약 ISBN의 길이가 13과 같으면
    rst = isbn_check(isbn)
    if rst == 1:
        print('ISBN 코드 : %s는 검증되었습니다.' %isbn)
    else:
        print('ISBN 코드 : %s는 검증되지 않았습니다.' %isbn)
else:
    print('ISBN 코드 입력은 -를 제외하고 13자리를 입력해주세요.')
